version: '3.4'

services:
  loadbalancer:
    container_name: loadbalancer
    image: ${DOCKER_REGISTRY-}loadbalancer
    ports:
      - '3333:3333'
    build:
      context: .
      dockerfile: LoadBalancer/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:3333
    depends_on:
      - rabbit
 

  api:
    container_name: api
    image: ${DOCKER_REGISTRY-}api
    ports:
      - '3000:3000'
    restart: always
    build:
      context: .
      dockerfile: Api/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:3000
    depends_on:
      - rabbit

  incrementer:
    container_name: incrementer
    image: ${DOCKER_REGISTRY-}incrementer
    ports:
      - '3100:3100'
    restart: always
    build:
      context: .
      dockerfile: Incrementer/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:3100
    depends_on:
      - rabbit
      - postgres

  postgres:
    container_name: postgres
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgre
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=increment_db
    volumes:
      - ./pgdata:/var/lib/postgresql/data
  
  rabbit:
    container_name: rabbit
    image: 'rabbitmq:3.8-management-alpine'
    ports:
      # AMQP
      - '5672:5672'
      # management UI
      - '15672:15672'
    environment:
      AMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
